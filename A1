{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "欢迎使用 Colaboratory",
      "version": "0.3.2",
      "provenance": [],
      "collapsed_sections": [],
      "toc_visible": true,
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/12798183/UTS_ML2019_ID12798183/blob/master/%E6%AC%A2%E8%BF%8E%E4%BD%BF%E7%94%A8_Colaboratory.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "5fCEDCU_qrC0"
      },
      "source": [
        "<p><img alt=\"Colaboratory logo\" height=\"45px\" src=\"https://colab.research.google.com/img/colab_favicon.ico\" align=\"left\" hspace=\"10px\" vspace=\"0px\"></p>\n",
        "\n",
        "<h1>欢迎使用 Colaboratory！</h1>\n",
        "\n",
        "\n",
        "Colaboratory 是一个免费的 Jupyter 笔记本环境，不需要进行任何设置就可以使用，并且完全在云端运行。\n",
        "\n",
        "借助 Colaboratory，您可以编写和执行代码、保存和共享分析结果，以及利用强大的计算资源，所有这些都可通过浏览器免费使用。"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "xitplqMNk_Hc",
        "outputId": "ed4f60d2-878d-4056-c438-352dac39a112",
        "colab": {
          "height": 420
        }
      },
      "source": [
        "#@title Colaboratory 简介 { display-mode: \"form\" }\n",
        "#@markdown 下面这个时长 3 分钟的视频概述了 Colaboratory 的主要功能：\n",
        "from IPython.display import YouTubeVideo\n",
        "YouTubeVideo('inN8seMm7UI', width=600, height=400)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "        <iframe\n",
              "            width=\"600\"\n",
              "            height=\"400\"\n",
              "            src=\"https://www.youtube.com/embed/inN8seMm7UI\"\n",
              "            frameborder=\"0\"\n",
              "            allowfullscreen\n",
              "        ></iframe>\n",
              "        "
            ],
            "text/plain": [
              "<IPython.lib.display.YouTubeVideo at 0x7f956e9dda50>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 0
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "FsLUV-y6Bctn",
        "colab_type": "text"
      },
      "source": [
        ""
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "X8JHiL6OBd3e",
        "colab_type": "text"
      },
      "source": [
        "Introduction\n",
        "\n",
        "The title of this article is 'The Computational Complexity of Probabilistic Inference Using Bayesian Belief Networks'. This article was published in 1990 by Gregory F. Cooper. This paper demonstrates that probabilistic reasoning using belief networks is NP-hard, and suggests that research should be far from general, effective probabilistic inference algorithms, designing effective special cases, averaging and approximation algorithms.\n",
        "\n",
        "Content\n",
        "\n",
        "The article begins with a brief description of what is the Bayes belief network and the types of probabilistic reasoning performed using the belief network. Then the article proves that the probabilistic reasoning using the belief network is NP-hard by the definition of P and NP, and extends the result in several different ways. This result indicates that a general, effective probabilistic inference algorithm is not universally developed for belief networks, so research should be directed away from this algorithm, and designing effective special-cases, average-case and approximation algorithms. The article transforms a known NP-complete problem into a decision- making problem of probabilistic reasoning. First, the article is introduce the definition of 3SAT , then the reduction of 3SAT proves that PIBNET is also NP-hard for belief networks that are severely restricted in topology. This result is natural to develop to add additional complexity results. This proof method has several advantages, such as a simple structure and the complexity of the computational complexity of PIBNET that does not depend on the use of arbitrarily complex belief network topologies. These can limit the direct use of belief networks to derive probabilistic inferences. After know the problem is NP-hard, the authors give very low priority to the attempt to develop such an algorithm. Since different strategies are needed in the complex real world domain, not only general and precise algorithms need to be sought, but also alternative strategies are needed to deal with probabilistic reasoning. Therefore, the paper proposes an approximation algorithm and a special case algorithm. Although the approximation algorithm is not accurate, it ensures that the results are within a certain error range, and in some fields such as medicine, experiments have begun. The special case algorithm is specific to a particular type of belief network, the advantage of which is easier to handle in terms of computation. The author cites the application of two special cases of algorithms in real life and suggests that new special case algorithms can be developed and studied from the decomposability of network problems.\n",
        "\n",
        "Innovation\n",
        "\n",
        "So far, the Bayesian belief network is still the subject of much research. For the nineteenth century, the theme was still a new field that was not fully developed and\n",
        "was loved by many researchers. The Bayesian belief network is simple and represents the probability relationship. The research shows that probabilistic reasoning of multiple connected networks cannot develop a general and effective reasoning algorithm for belief networks. This result proposes a new way for the future research of belief network probabilistic inference algorithm design, advocates the low priority, and develops different special types of algorithms by decomposing network problems. At the same time, the paper puts forward the advantages and disadvantages of special algorithms and approximation algorithms. The comparison of the algorithms allows the reader to clearly understand the advantages and disadvantages of different algorithms, and provides a reference for the complex real world.\n",
        "However, due to the publication of the article(1990), the special algorithms and approximation algorithms proposed at the end of the article cannot judge whether they are replaced or updated now. And at the time, similar special algorithm techniques have been used to solve some types of fault tree problems and network reliability problems. Approximation algorithms have also solved important empirical problems in some areas. The authors only summed up the advantages of the two algorithms. However, there' no new algorithms have been proposed, so this alternative strategy is not innovative.\n",
        "\n",
        "Technical quality\n",
        "\n",
        "The quality of the work of the thesis is very high. In order to prove that the problem is NP-hard, the article gives the detailed process of the argument and verifies the problem by way of example. The formulas and theorems used in the process are all verifiable. The article gives a simple and clear result of the argument and proves that PIBNET is NP-hard. It makes the reader can directly apply and copy the results from the article. At the same time, the additional complexity results framework developed by the argumentation results is also described in detail. The author considers that any attempt at a general, exact, efficient solution is unlikely to be successful, and proposes three alternative strategy algorithms. however, he does not compare the differences between the three algorithms and the general, effective probabilistic inference algorithm in detail. This article also needs to improve the comparison of algorithms. The authors suggest that there are many other ways to prove that PIBNET is NP-hard, and that the arguments of Rosenthal, Provan, and Ball are mentioned to make the arguments more credible.\n",
        "\n",
        "Application and X-factor\n",
        "\n",
        "I think the application fits the advanced technology because today's big data era is inseparable from the algorithmic analysis. This technology can be applied in the fields of medicine, education, economics, and so on. This technology should make full use of the network's decomposability of node clusters, develop special algorithms for different systems, and improve the accuracy of the algorithm. I think that the work in the paper can lead to a good discussion in the classroom, because from the 19th century to the present, the development of science and technology has made the technology more and more mature, and there are many new algorithm analysis, students can gather information together to discuss the The future of technology.\n",
        "\n",
        "Presentation\n",
        "\n",
        "The overall structure of this paper is clear. Firstly, a probabilistic inference algorithm based on Bayesian belief network is proposed to perform probabilistic reasoning effectively on all types of belief networks. The following briefly introduces the types of performing probabilistic reasoning using belief networks, and then demonstrates that probabilistic reasoning of belief networks is NP-hard. Finally, the importance of the argumentation result for the future belief network probabilistic inference algorithm is discussed. The formulas and theorems involved in the argument do not give a clear explanation and are not friendly to beginner readers. This problem can be avoided. For example, the default reader of the article can distinguish between NP-hard questions and NP-complete problems. The concept and distinction should be mentioned in the article. However, the article compares the advantages and disadvantages of other algorithms and the use of its algorithm in the real world, which helps the reader better understand the algorithm and improves the credibility of the article."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "wImrqeVwCodR",
        "colab_type": "text"
      },
      "source": [
        "Plain Text link:"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "GJBs_flRovLc"
      },
      "source": [
        "## 使用入门\n",
        "\n",
        "您正在阅读的文档是托管在 Colaboratory 中的 <a href=\"https://jupyter.org/\">Jupyter 笔记本</a>。它并非静态页面，而是一个可让您以 Python 和其他语言编写和执行代码的互动环境。\n",
        "\n",
        "例如，以下<strong>代码单元格</strong>包含一个简短的 Python 脚本，该脚本会计算值、将其存储在变量中并输出结果："
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "gJr_9dXGpJ05",
        "outputId": "5626194c-e802-4293-942d-2908885c3c1f",
        "colab": {
          "height": 35
        }
      },
      "source": [
        "seconds_in_a_day = 24 * 60 * 60\n",
        "seconds_in_a_day"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "86400"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 0
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "2fhs6GZ4qFMx"
      },
      "source": [
        "要执行上述单元格中的代码，请点击选择它，然后按代码左侧的“播放”按钮，或使用键盘快捷键“Command/Ctrl+Enter”。\n",
        "\n",
        "所有单元格都会修改同一全局状态，因此您通过执行某个单元格定义的变量可用在其他单元格中："
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "-gE-Ez1qtyIA",
        "outputId": "8d2e4259-4682-4e19-b683-7b9087f28820",
        "colab": {
          "height": 35
        }
      },
      "source": [
        "seconds_in_a_week = 7 * seconds_in_a_day\n",
        "seconds_in_a_week"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "604800"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 0
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "lSrWNr3MuFUS"
      },
      "source": [
        "要详细了解如何使用 Colaboratory 笔记本，请参阅 <a href=\"/notebooks/basic_features_overview.ipynb\">Colaboratory 概览</a>。\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "-Rh3-Vt9Nev9"
      },
      "source": [
        "## 更多资源\n",
        "\n",
        "要了解如何充分利用 Python、Jupyter、Colaboratory 和相关工具，请参阅以下资源：\n",
        "\n",
        "### 在 Colaboratory 中使用笔记本\n",
        "- [Colaboratory 概览](/notebooks/basic_features_overview.ipynb)\n",
        "- [Markdown 指南](/notebooks/markdown_guide.ipynb)\n",
        "- [导入库和安装依赖项](/notebooks/snippets/importing_libraries.ipynb)\n",
        "- [在 GitHub 中保存和加载笔记本](https://colab.research.google.com/github/googlecolab/colabtools/blob/master/notebooks/colab-github-demo.ipynb)\n",
        "- [互动表单](/notebooks/forms.ipynb)\n",
        "- [互动微件](/notebooks/widgets.ipynb)\n",
        "\n",
        "### 处理数据\n",
        "- [加载数据：云端硬盘、表格和 Google Cloud Storage](/notebooks/io.ipynb) \n",
        "- [图表：可视化数据](/notebooks/charts.ipynb)\n",
        "- [BigQuery 使用入门](/notebooks/bigquery.ipynb)\n",
        "\n",
        "### 机器学习速成课程\n",
        "以下是可以在 Google 的在线机器学习课程中找到的部分笔记本。请查看<a href=\"https://developers.google.com/machine-learning/crash-course/\">完整课程网站</a>了解详情。\n",
        "- [Pandas 简介](/notebooks/mlcc/intro_to_pandas.ipynb)\n",
        "- [Tensorflow 概念](/notebooks/mlcc/tensorflow_programming_concepts.ipynb)\n",
        "- [使用 TensorFlow 的起始步骤](/notebooks/mlcc/first_steps_with_tensor_flow.ipynb)\n",
        "- [神经网络简介](/notebooks/mlcc/intro_to_neural_nets.ipynb)\n",
        "- [稀疏数据和嵌入简介](/notebooks/mlcc/intro_to_sparse_data_and_embeddings.ipynb)\n",
        "\n",
        "### 使用加速硬件\n",
        "- [将 TensorFlow 与 GPU 配合使用](/notebooks/gpu.ipynb)\n",
        "- [将 TensorFlow 与 TPU 配合使用](/notebooks/tpu.ipynb)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "P-H6Lw1vyNNd"
      },
      "source": [
        "## 机器学习示例：Seedbank\n",
        "\n",
        "要查看 Colaboratory 实现的互动机器学习分析的端到端示例，请查看 <a href=\"https://research.google.com/seedbank/\">Seedbank</a> 项目。\n",
        "\n",
        "一些精选示例：\n",
        "\n",
        "- <a href=\"https://research.google.com/seedbank/seed/neural_style_transfer_with_tfkeras\">神经风格迁移</a>：使用深度学习在图像之间迁移风格。\n",
        "- <a href=\"https://research.google.com/seedbank/seed/ez_nsynth\">EZ NSynth</a>：使用 WaveNet 自动编码器合成音频。\n",
        "- <a href=\"https://research.google.com/seedbank/seed/fashion_mnist_with_keras_and_tpus\">Fashion MNIST 与 Keras 和 TPU</a>：使用深度学习对时装图像进行分类。\n",
        "- <a href=\"https://research.google.com/seedbank/seed/deepdream\">DeepDream</a>：根据您自己的照片生成 DeepDream 图像。\n",
        "- <a href=\"https://research.google.com/seedbank/seed/convolutional_vae\">卷积 VAE</a>：创建手写数字生成模型。"
      ]
    }
  ]
}
